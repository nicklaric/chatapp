rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Default rule - deny all access unless explicitly allowed
    match /{document=**} {
      allow read, write: if false;
    }

    // Allow authenticated users to read/write their own documents
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Chat rooms
    match /chats/{chatId} {
      // Allow read if the user is a participant in the chat
      allow read: if request.auth != null && request.auth.uid in resource.data.participants;
      
      // Allow create if user is authenticated
      allow create: if request.auth != null && 
                    request.resource.data.createdBy == request.auth.uid &&
                    request.auth.uid in request.resource.data.participants;
      
      // Allow update if user is a participant
      allow update: if request.auth != null && 
                    request.auth.uid in resource.data.participants;
      
      // Messages in a chat
      match /messages/{messageId} {
        // Allow read if the user is a participant in the parent chat
        allow read: if request.auth != null && 
                    request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.participants;
        
        // Allow create if user is a participant and message is from them or is a system message
        allow create: if request.auth != null && 
                      request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.participants && 
                      (request.resource.data.sender == request.auth.uid || request.resource.data.type == 'system');
        
        // Allow update/delete of their own messages
        allow update, delete: if request.auth != null && 
                              resource.data.sender == request.auth.uid;
      }
    }
    
    // Conversations collection for AI processing
    match /conversations/{conversationId} {
      // Only authenticated users can create a conversation document
      allow create: if request.auth != null;
      
      // Only the creator can read their conversation
      allow read: if request.auth != null && resource.data.userId == request.auth.uid;
      
      // Only the creator can update their conversation
      allow update: if request.auth != null && resource.data.userId == request.auth.uid;
    }
  }
}